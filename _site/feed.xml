<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debris Storage</title>
    <description>Memory is not reliable until you write it down.</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 14 May 2015 12:59:40 -0400</pubDate>
    <lastBuildDate>Thu, 14 May 2015 12:59:40 -0400</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Python Quiz Note</title>
        <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
print type(1 / 2)&lt;/p&gt;

&lt;p&gt;type &amp;lsquo;int&amp;rsquo;  version 2&lt;/p&gt;

&lt;p&gt;type &amp;lsquo;float&amp;rsquo; version 3
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
 def f(): pass&lt;/p&gt;

&lt;p&gt; print type(f())&lt;/p&gt;

&lt;p&gt; type &amp;lsquo;NoneType&amp;rsquo;
 &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
 def f(): pass&lt;/p&gt;

&lt;p&gt; print type(f())&lt;/p&gt;

&lt;p&gt; type &amp;lsquo;NoneType&amp;rsquo;
 &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
 print type(1J)&lt;/p&gt;

&lt;p&gt; type &amp;lsquo;complex&amp;rsquo;
 &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
 print type(lambda:None)&lt;/p&gt;

&lt;p&gt; type &amp;lsquo;function&amp;rsquo;
 &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
 print len([None, None])&lt;/p&gt;

&lt;p&gt; 2
 &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
 // lamda expression == anonymous function&lt;/p&gt;

&lt;p&gt; d = lambda p: p * 2&lt;/p&gt;

&lt;p&gt; t = lambda p: p * 3&lt;/p&gt;

&lt;p&gt; x = 2&lt;/p&gt;

&lt;p&gt; x = d(x)&lt;/p&gt;

&lt;p&gt; x = t(x)&lt;/p&gt;

&lt;p&gt; x = d(x)&lt;/p&gt;

&lt;p&gt; print x&lt;/p&gt;

&lt;p&gt; 24&lt;/p&gt;

&lt;p&gt; // //
 d = lambda p: p * 2
 =====&gt;
 d = function(p){ return p * 2};
 &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
 x = 4.5&lt;/p&gt;

&lt;p&gt; y = 2&lt;/p&gt;

&lt;p&gt; print x // y&lt;/p&gt;

&lt;p&gt; // == floor divide&lt;/p&gt;

&lt;p&gt; 2.0
 &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
 // set
 nums = set([1,1,2,3,3,3,4])&lt;/p&gt;

&lt;p&gt; print len(nums)    // set elements are unique&lt;/p&gt;

&lt;p&gt; 4&lt;/p&gt;

&lt;p&gt; // nums is a set, only unique values are retained.
 // More about set&lt;/p&gt;

&lt;p&gt; a = set([1, 2, 3, 4])      //unique letters in a&lt;/p&gt;

&lt;p&gt; b = set([2, 4, 5])&lt;/p&gt;

&lt;p&gt; a - b ==&gt; set([1, 3])&lt;/p&gt;

&lt;p&gt; a | b ==&gt; set([1, 2, 3, 4, 5])&lt;/p&gt;

&lt;p&gt; a &amp;amp; b ==&gt; set([2, 4])&lt;/p&gt;

&lt;p&gt; a ^ b ==&gt; set([1 ,3 ,5])    //letters in a or b but not in both&lt;/p&gt;

&lt;p&gt; // //
 for element in a:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; print element
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; 1 2 3 4&lt;/p&gt;

&lt;p&gt; print a[0]   // set object does not support indexing&lt;/p&gt;

&lt;p&gt; 1 in a&lt;/p&gt;

&lt;p&gt; True&lt;/p&gt;

&lt;p&gt; &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
 x = True&lt;/p&gt;

&lt;p&gt; y = False&lt;/p&gt;

&lt;p&gt; z = False&lt;/p&gt;

&lt;p&gt; if x or y and z:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; print &quot;yes&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; else:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; print &quot;no&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; // &amp;lsquo;yes&amp;rsquo;, in python, AND is higher precedence than OR
 &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
If PYTHONPATH is set in the environment, which directories are searched for modules?&lt;/p&gt;

&lt;p&gt;A) PYTHONPATH directory&lt;/p&gt;

&lt;p&gt;B) current directory&lt;/p&gt;

&lt;p&gt;C) home directory&lt;/p&gt;

&lt;p&gt;D) installation dependent default path&lt;/p&gt;

&lt;p&gt;A, B and D
// First is the current directory, then is the PYTHONPATH directory if set, then is the installation dependent default path.
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In python 2.6 or earlier, the code will print error type 1 if accessSecureSystem raises an exception of either AccessError type or SecurityError type
&lt;code&gt;&lt;/p&gt;

&lt;p&gt;try:
    accessSecureSystem()&lt;/p&gt;

&lt;p&gt;except AccessError, SecurityError:
    print &amp;ldquo;error type 1&amp;rdquo;&lt;/p&gt;

&lt;p&gt;continueWork()&lt;/p&gt;

&lt;p&gt;false // The except statement will only catch exceptions of type AccessError and name the exception object SecurityError. In order to catch both you can use a tuple like this: except (AccessError, SecurityError). Python has been changed in version 3.0 so that the syntax shown in the question will actually catch both types.
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
f = None&lt;/p&gt;

&lt;p&gt;for i in range (5):
    with open(&amp;ldquo;data.txt&amp;rdquo;, &amp;ldquo;w&amp;rdquo;) as f:
      if i &gt; 2:
        break&lt;/p&gt;

&lt;p&gt;True // The WITH statement when used with open file guarantees that the file object is closed when the with block exits.
print f.closed
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
counter = 1&lt;/p&gt;

&lt;p&gt;def doLotsOfStuff():&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;global counter

for i in (1, 2, 3): 
    counter += 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;doLotsOfStuff()&lt;/p&gt;

&lt;p&gt;print counter&lt;/p&gt;

&lt;p&gt;4 // global
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
print &amp;ldquo;hello&amp;rdquo; &amp;lsquo;world&amp;rsquo;&lt;/p&gt;

&lt;p&gt;helloworld // cancatenated
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
print &amp;ldquo;\x48\x49!&amp;rdquo;&lt;/p&gt;

&lt;p&gt;HI!   //\x is an escape sequence that means the following 2 digits are a hexadicmal number encoding a character.&lt;/p&gt;

&lt;p&gt;print 0xA + 0xa  //0xA and 0xa are both hexadecimal integer literals representing the decimal value 10. There sum is 20.
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
class parent:&lt;/p&gt;

&lt;p&gt;def &lt;strong&gt;init&lt;/strong&gt;(self, param):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;self.v1 = param
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;class child(parent):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def __init__(self, param):

    self.v2 = param
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;obj = child(11)&lt;/p&gt;

&lt;p&gt;print &amp;ldquo;%d %d&amp;rdquo; % (obj.v1, obj.v2)&lt;/p&gt;

&lt;p&gt;Error is generated // AttributeError: child instance has no attribute &amp;lsquo;v1&amp;rsquo;. self.v1 was never created as a variable since the parent &lt;strong&gt;init&lt;/strong&gt; was not explicitly called.
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
values = [1, 2, 1, 3]&lt;/p&gt;

&lt;p&gt;nums = set(values)&lt;/p&gt;

&lt;p&gt;def checkit(num):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if num in nums:

    return True

else:

    return False
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for i in  filter(checkit, values):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;print i
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;1 2 1 3
//The filter will return all items from the list values which return True when passed to the function checkit. checkit will check if the value is in the set. Since all the numbers in the set come from the values list, all of the orignal values in the list will return True.
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
values = [2, 3, 2, 4]&lt;/p&gt;

&lt;p&gt;def my_transformation(num):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;return num ** 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for i in  map(my_transformation, values):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;print i
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4 9 4 16
// map will call the function for each value in the list. The ** operator in the function raises the parameter to the power of 2.
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
import pickle&lt;/p&gt;

&lt;p&gt;class account:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def __init__(self, id, balance):

    self.id = id

    self.balance = balance

def deposit(self, amount):

    self.balance += amount

def withdraw(self, amount):

    self.balance -= amount
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;myac = account(&amp;lsquo;123&amp;rsquo;, 100)&lt;/p&gt;

&lt;p&gt;myac.deposit(800)&lt;/p&gt;

&lt;p&gt;myac.withdraw(500)&lt;/p&gt;

&lt;p&gt;fd = open( &amp;ldquo;archive&amp;rdquo;, &amp;ldquo;w&amp;rdquo; )&lt;/p&gt;

&lt;p&gt;pickle.dump( myac, fd)&lt;/p&gt;

&lt;p&gt;fd.close()&lt;/p&gt;

&lt;p&gt;myac.deposit(200)&lt;/p&gt;

&lt;p&gt;print myac.balance&lt;/p&gt;

&lt;p&gt;fd = open( &amp;ldquo;archive&amp;rdquo;, &amp;ldquo;r&amp;rdquo; )&lt;/p&gt;

&lt;p&gt;myac = pickle.load( fd )&lt;/p&gt;

&lt;p&gt;fd.close()&lt;/p&gt;

&lt;p&gt;print myac.balance&lt;/p&gt;

&lt;p&gt;600 400  // pickle
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
class Person:
    def &lt;strong&gt;init&lt;/strong&gt;(self, id):
        self.id = id&lt;/p&gt;

&lt;p&gt;obama = Person(100)&lt;/p&gt;

&lt;p&gt;obama.&lt;strong&gt;dict&lt;/strong&gt;[&amp;lsquo;age&amp;rsquo;] = 49&lt;/p&gt;

&lt;p&gt;print obama.age + len(obama.&lt;strong&gt;dict&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;51&lt;/p&gt;

&lt;p&gt;We have created a member variable named &amp;lsquo;age&amp;rsquo; by adding it directly the objects dictionary. The value of &amp;lsquo;age&amp;rsquo; is initialized to 49. There are 2 items in the dictionary, &amp;lsquo;age&amp;rsquo; and &amp;lsquo;id&amp;rsquo;, therefore the sum of the &amp;lsquo;age&amp;rsquo; value 49 and then size of the dictionary, 2 items, is 51.
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
sys.path.append(&amp;lsquo;/root/mods&amp;rsquo;)&lt;/p&gt;

&lt;p&gt;Adds a new directory to search for python modules that are imported.&lt;/p&gt;

&lt;p&gt;The list sys.path contains, in order, all the directories to be searched when trying to load a module
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
import re&lt;/p&gt;

&lt;p&gt;sum = 0&lt;/p&gt;

&lt;p&gt;pattern = &amp;lsquo;back&amp;rsquo;&lt;/p&gt;

&lt;p&gt;if re.match(pattern, &amp;lsquo;backup.txt&amp;rsquo;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sum += 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if re.match(pattern, &amp;lsquo;text.back&amp;rsquo;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sum += 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if re.search(pattern, &amp;lsquo;backup.txt&amp;rsquo;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sum += 4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if re.search(pattern, &amp;lsquo;text.back&amp;rsquo;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sum += 8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;print sum&lt;/p&gt;

&lt;p&gt;13, search will see if the pattern exists anywhere in the string, while match will only check if the pattern exists in the beginning of the string.
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Assuming the filename for the code below is /usr/lib/python/person.py and the program is run as:
python /usr/lib/python/person.py&lt;/p&gt;

&lt;p&gt;  What gets printed?&lt;/p&gt;

&lt;p&gt;  &lt;code&gt;
  class Person:&lt;/p&gt;

&lt;p&gt;  def &lt;strong&gt;init&lt;/strong&gt;(self):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  pass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  def getAge(self):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  print __name__
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  p = Person()&lt;/p&gt;

&lt;p&gt;  p.getAge()
  &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;  __main__&lt;/p&gt;

&lt;p&gt;  If the module where the reference to _&lt;em&gt;name_&lt;/em&gt; is made has been imported from another file, then the module name will be in the variable in the form of the filename without the path or file extension. If the code is being run NOT as the result of an import, the variable will have the special value &amp;ldquo;_&lt;em&gt;main_&lt;/em&gt;&amp;rdquo;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
confusion = {}&lt;/p&gt;

&lt;p&gt;confusion[1] = 1&lt;/p&gt;

&lt;p&gt;confusion[&amp;lsquo;1&amp;rsquo;] = 2&lt;/p&gt;

&lt;p&gt;confusion[1.0] = 4&lt;/p&gt;

&lt;p&gt;sum = 0&lt;/p&gt;

&lt;p&gt;for k in confusion:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sum += confusion[k]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;print sum&lt;/p&gt;

&lt;p&gt;6
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note from python docs: &amp;ldquo;if two numbers compare equal (such as 1 and 1.0) then they can be used interchangeably to index the same dictionary entry. (Note however, that since computers store floating-point numbers as approximations it is usually unwise to use them as dictionary keys.)&amp;rdquo;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
list1 = [0, 2, 4]&lt;/p&gt;

&lt;p&gt;list2 = [&amp;lsquo;a&amp;rsquo;, &amp;lsquo;b&amp;rsquo;, &amp;lsquo;c&amp;rsquo;]&lt;/p&gt;

&lt;p&gt;for sth in (list1, list2):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;print sth

print sth[0]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;[0, 2, 4]&lt;/p&gt;

&lt;p&gt;[&amp;lsquo;a&amp;rsquo;, &amp;lsquo;b&amp;rsquo;, &amp;lsquo;c&amp;rsquo;]&lt;/p&gt;

&lt;p&gt;0, &amp;lsquo;a&amp;rsquo;
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
names1 = [&amp;lsquo;Amir&amp;rsquo;, &amp;lsquo;Barry&amp;rsquo;, &amp;lsquo;Chales&amp;rsquo;, &amp;lsquo;Dao&amp;rsquo;]&lt;/p&gt;

&lt;p&gt;loc = names1.index(&amp;ldquo;Edward&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;print loc&lt;/p&gt;

&lt;p&gt;// An exception is thrown
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
tuple.append((1, 2, 3))&lt;/p&gt;

&lt;p&gt;tuples are immutable, and do not have append method.
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
def dostuff(param1, *param2):
    print type(param2)&lt;/p&gt;

&lt;p&gt;dostuff(&amp;lsquo;apples&amp;rsquo;, &amp;lsquo;bananas&amp;rsquo;, &amp;lsquo;cherry&amp;rsquo;, &amp;lsquo;dates&amp;rsquo;)&lt;/p&gt;

&lt;p&gt;tuple
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
def myfunc(x, y, z, a):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;print x + y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nums = [1, 2, 3, 4]&lt;/p&gt;

&lt;p&gt;myfunc(*nums)&lt;/p&gt;

&lt;p&gt;3, *nums will unpack the list into individual elements to be passed to the function.
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How do you create a package so that the following reference will work?&lt;/p&gt;

&lt;p&gt;In order to create a package create a directory for the package name and then put an &lt;strong&gt;init&lt;/strong&gt;.py file in te directory.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
class A:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def __init__(self, a, b, c):

    self.x = a + b + c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;a = A(1,2,3)&lt;/p&gt;

&lt;p&gt;b = getattr(a, &amp;lsquo;x&amp;rsquo;)&lt;/p&gt;

&lt;p&gt;setattr(a, &amp;lsquo;x&amp;rsquo;, b+1)&lt;/p&gt;

&lt;p&gt;print a.x&lt;/p&gt;

&lt;p&gt;7, getattr can be used to get the value of a member variable of an object. setattr can be used to set it.
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cmp returns a value less than 0 if x is less than y; cmp returns 0 if x equals y; cmp returns a value greater than 0 if x is greater than y.&lt;/p&gt;

&lt;p&gt;x, y = 0, 1&lt;/p&gt;

&lt;p&gt;cmp(x, y) ==&gt; -1&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
sum(iterable[, start])
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;list dict =&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
dict.copy()  VS  dict.deppcopy()&lt;/p&gt;

&lt;p&gt;dict2 = dict1.copy()&lt;/p&gt;

&lt;p&gt;dict1[1] = 100&lt;/p&gt;

&lt;p&gt;print dict2[1]&lt;/p&gt;

&lt;p&gt;100
// // // //
import copy&lt;/p&gt;

&lt;p&gt;dict3 = copy.deepcopy(dict1)&lt;/p&gt;

&lt;p&gt;dict1[1] = 100&lt;/p&gt;

&lt;p&gt;dict3[1]&lt;/p&gt;

&lt;p&gt;old value
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or dict3 = dict(dict1)&lt;/p&gt;

&lt;p&gt;//created a new dictionary&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;
kvps = { &amp;lsquo;1&amp;rsquo; : 1, &amp;lsquo;2&amp;rsquo; : 2 , &amp;lsquo;3&amp;rsquo; : 3, &amp;lsquo;4&amp;rsquo; : 4, &amp;lsquo;5&amp;rsquo; : 5}&lt;/p&gt;

&lt;p&gt;newData = { &amp;lsquo;1&amp;rsquo; : 10, &amp;lsquo;3&amp;rsquo; : 30 }&lt;/p&gt;

&lt;p&gt;kvps.update(newData)&lt;/p&gt;

&lt;p&gt;x = sum(kvps.values())&lt;/p&gt;

&lt;p&gt;print x&lt;/p&gt;

&lt;p&gt;51 // update() // sum()
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 14 May 2015 00:00:00 -0400</pubDate>
        <link>/2015/05/14/python-quiz.html</link>
        <guid isPermaLink="true">/2015/05/14/python-quiz.html</guid>
        
        <category>python</category>
        
        <category>edx</category>
        
        <category>quiz</category>
        
        
      </item>
    
      <item>
        <title>May stuff</title>
        <description>&lt;h4&gt;Array&lt;/h4&gt;

&lt;p&gt;def twoSumII(nums, target):
    # nums is a sorted list&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lenOfNums = len(nums)
index1, index2 = 0, 0
for i in range(lenOfNums):
    index2 = lenOfNums - i - 1

    if nums[index2] + nums[index1] &amp;lt;= target:
        break

# print index1, index2    
# get the value of index1 and index2
for index1 in range(index2 + 1):
    if nums[index1] + nums[index2] == target:
        print &#39;found, and the result is:&#39;
        return index1, index2

    else:
        print &#39;not found&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nums = [2,3,4,5,7,9,11]
target = 11&lt;/p&gt;

&lt;p&gt;print twoSumII(nums, target)&lt;/p&gt;

&lt;h4&gt;Alfred2&lt;/h4&gt;
</description>
        <pubDate>Mon, 11 May 2015 00:00:00 -0400</pubDate>
        <link>/2015/05/11/may-stuff.html</link>
        <guid isPermaLink="true">/2015/05/11/may-stuff.html</guid>
        
        <category>python</category>
        
        <category>algorithm</category>
        
        <category>leetcode</category>
        
        
      </item>
    
      <item>
        <title>Incubator Meeting</title>
        <description>&lt;h4&gt;How to add the read write permissions recursively?&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;identify yourself&lt;/p&gt;

&lt;p&gt; &gt;whoami&lt;/p&gt;

&lt;p&gt; &gt;id&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;add permissions for usera&lt;/p&gt;

&lt;p&gt; &gt; sudo chown -R usera:staff ~/Workspace&lt;/p&gt;

&lt;p&gt; &gt; sudo chown -R usera:staff /Users/usera&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;add read and write permissions&lt;/p&gt;

&lt;p&gt; &gt;chmod -R ug+rw foldername&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;developing related&lt;/h4&gt;

&lt;p&gt;nodemon&lt;/p&gt;

&lt;p&gt;http://localhost:8080/api/test  response a json object success.&lt;/p&gt;

&lt;p&gt;http://www.evernote.com/l/AZL97NJX1lhNp5y2mfWrTYAQa2AugmPGmvM/&lt;/p&gt;

&lt;h4&gt;When you create a new API, you need to:&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Create a new model file if it doesn’t already exist.&lt;/li&gt;
&lt;li&gt;Add a new controller for the model or update the existing one with the needed functions.&lt;/li&gt;
&lt;li&gt;Bind the controller method to the URL you want the API to be consumed from in routes.js&lt;/li&gt;
&lt;li&gt;Test the endpoint by using Postman or Advanced Rest Client at the URl you specified. For this, you will need to go to terminal at the CharaSparkAPI folder and run ‘nodemon server’. If you don’t have nodemon, you can install it by running ‘sudo npm install -g nodemon’.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;sbulime: dbclick and use cmd + d to select multiple cursors&lt;/p&gt;

&lt;h4&gt;developing note&lt;/h4&gt;

&lt;h5&gt;Target:&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;Signup
Post: /api/signup
creates the user

Update
PUT: /api/user/:userID
updates the user

Get
GET: /api/user/:userID
gets a specific user
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s try to figure out how this /api/test works.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;routes.js
server.get(PATH + &amp;lsquo;user/:userID&amp;rsquo;, User.getProfile);&lt;/p&gt;

&lt;p&gt;// this creates a url for the service
// set a get method for /api/test&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/models/user.js&lt;/p&gt;

&lt;p&gt;// which is associated with mongoose and mongodb using
     var UserSchema = new Schema({
       user_id: {
             type: String,
             required: true
         },
       email: {
             type: String,
             unique: true,
             required: true,
         },
       first_name: String,
       last_name: String,
       password: {
             type: String,
             required: true,
         },
       phone: String,
       createdDate: {
         type: Date,
         default: Date.now
       }
     });
     mongoose.model(&amp;lsquo;User&amp;rsquo;, UserSchema)&lt;/p&gt;

&lt;p&gt;UserSchema defines the structure of User table.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/controllers/user.js   create the function to handle the url request&lt;/p&gt;

&lt;p&gt; &lt;code&gt;
 exports.getProfile = function(req, res){
     User.find({},function(err, results) {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;     return res.send(results);

   });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lesson learned, always check your models schema&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use findOneAndUpdate to update the user profile.
&lt;code&gt;&lt;/p&gt;

&lt;p&gt;  exports.updateProfile = function(req, res){&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  var query = req.params.userID;
  var update = req.body;

  User.findOneAndUpdate(query, update, function(err, data){
      if(err){
          console.log(&#39;err is:&#39;, err);
          return next(err);
      }
      else{
          console.log(&#39;updated&#39;);
          return res.send(201, data);
      }
  });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  };&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;res.send(500, err); must be added.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;bkraider  test&lt;/p&gt;

&lt;h3&gt;req.params  VS req.body&lt;/h3&gt;

&lt;p&gt;req.params.user_name accepts the value from variables.&lt;/p&gt;

&lt;p&gt;req.body.user_name finds out the value from the json package.&lt;/p&gt;

&lt;h3&gt;Signin error&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&lt;/p&gt;

&lt;p&gt;exports.Login = function(req, res){
    userName = req.body.user_name;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;User.findOne({user_name:userName}, function(err, data){

    if(err){
        console.log(&#39;err is: &#39;, err);
        return res.send(err);
    }
    else {
        userPass = req.body.password;
        if(data != null &amp;amp;&amp;amp; data.password == userPass){
            return res.send(200, {result: &#39;true&#39;});
        }
        else{
            return res.send(200, {result: &#39;false&#39;});
        }

    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h6&gt;if(data != null &amp;amp;&amp;amp; data.password == userPass){}&lt;/h6&gt;

&lt;p&gt;Mongoose api doc&lt;/p&gt;

&lt;p&gt;http://mongoosejs.com/docs/api.html&lt;/p&gt;
</description>
        <pubDate>Sat, 09 May 2015 00:00:00 -0400</pubDate>
        <link>/2015/05/09/incubator-meeting.html</link>
        <guid isPermaLink="true">/2015/05/09/incubator-meeting.html</guid>
        
        <category>terminal</category>
        
        <category>permission</category>
        
        <category>mongoose</category>
        
        <category>restapi</category>
        
        
      </item>
    
      <item>
        <title>Developers Guild Meetup</title>
        <description>&lt;h4&gt;Introdution of Speakers&lt;/h4&gt;

&lt;p&gt;Soft Skills: Ruby, Python, Open source tools. Data Scientist.&lt;/p&gt;

&lt;h4&gt;MVC&lt;/h4&gt;

&lt;p&gt;4 - 5 years experience
Single Page Technology&lt;/p&gt;

&lt;p&gt;MVC + RESTful service&lt;/p&gt;

&lt;p&gt;Working on the latest stuff&lt;/p&gt;

&lt;p&gt;I read this book, I watch that tutorial. Learning by yourself is more impressive.
&amp;ldquo;I want to know what you think.&amp;rdquo;
&amp;ldquo;How to solve a problem, saving your time on learning the syntax itself.&amp;rdquo;&lt;/p&gt;

&lt;h4&gt;PluralSight&lt;/h4&gt;

&lt;p&gt;recommended for visual learner&lt;/p&gt;

&lt;p&gt;http://it-ebooks.info/tag/programming/&lt;/p&gt;

&lt;p&gt;actively study&lt;/p&gt;

&lt;h4&gt;Your Roles in Resume&lt;/h4&gt;

&lt;p&gt;Project based:
For each bullet, list all tech tracks and frameworks that you used.&lt;/p&gt;

&lt;h3&gt;Thank you letter &amp;mdash;- is very important. Follow-up. Repeat your name periodically.&lt;/h3&gt;

&lt;p&gt;What is your personal brand?&lt;/p&gt;

&lt;p&gt;Facebook: personal, your email, google, don&amp;rsquo;t complain on web which will affect your reputation in this virtual world.&lt;/p&gt;

&lt;p&gt;Personality! Show your personality, be nice during the interview and phone call.&lt;/p&gt;

&lt;p&gt;Check out your connector&amp;rsquo;s background. Know the company you are talking with, what they do, how would I fit in the comany.
It is two way straight.&lt;/p&gt;

&lt;p&gt;HR: What do you have questions about the position? ASK!&lt;/p&gt;

&lt;p&gt;you need to prepare some stuff about the company and the position. The more you interact with us, the more you will be more fit.&lt;/p&gt;

&lt;p&gt;What is this position? What is the typical day like? Are you able to adapt in this environment? for mutual training&lt;/p&gt;

&lt;p&gt;Am I gonna have a mentor? Is there any training? on-call availability? Working atmosphere? expectation?&lt;/p&gt;

&lt;p&gt;What kind of a learner are you? pair programming, book, video. Know the interesting thing you would like to work on.
Web development, back-end,&lt;/p&gt;

&lt;p&gt;Agile Process, small team,&lt;/p&gt;

&lt;p&gt;keep putting yourself in front of them.&lt;/p&gt;

&lt;p&gt;How to close the interview? I really like your company, I really like this job, what is the next step?&lt;/p&gt;

&lt;h4&gt;Being exciting!!!!! Curious! Ambitious!&lt;/h4&gt;

&lt;p&gt;Mobile app programming is the trend. Must know what apple is looking for. There are a lot of rules need to be follow.
Deliver the MVP to store first, then add more features later.&lt;/p&gt;

&lt;h4&gt;podcast, listen&lt;/h4&gt;

&lt;p&gt;Struggle with Social Interacting. Go outside, do not stay in your dorm. You have to get up, take a shower, dress up.&lt;/p&gt;

&lt;p&gt;The best way is two people standing side by side in front of a white board.&lt;/p&gt;

&lt;h4&gt;Don&amp;rsquo;t just be a consumer, also be a contributor.&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;print &quot;Hello Kitty&quot;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def hello():
    print &quot;hello world&quot;

    a, b = 0, 0
    if a == b:
        return True

    else:
        return False
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 07 May 2015 00:00:00 -0400</pubDate>
        <link>/2015/05/07/developers-guild.html</link>
        <guid isPermaLink="true">/2015/05/07/developers-guild.html</guid>
        
        <category>guild</category>
        
        <category>meetup</category>
        
        <category>recruiting</category>
        
        <category>job-searching</category>
        
        
      </item>
    
      <item>
        <title>Ruby on Rails P1</title>
        <description>&lt;h4&gt;Getting started&lt;/h4&gt;

&lt;p&gt;Route = URL + http verb (GET, POST, PUT/PATCH, DELETE)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;GET = find&lt;/p&gt;

&lt;p&gt;POST = add&lt;/p&gt;

&lt;p&gt;PUT/PATCH = update&lt;/p&gt;

&lt;p&gt;DELETE = delete&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;User1 → Router → CONTROLLER → View → Back to User1&lt;/p&gt;

&lt;h4&gt;Starting a Rails Project&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;check your ruby version&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;ruby -v&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;check your rails version&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;rails -v&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;install rails&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;gem install rails&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;start new project&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;rails new projectname&lt;/p&gt;&lt;/blockquote&gt;

 start rails server

&lt;blockquote&gt;&lt;p&gt;rails server or rails s&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The default url is localhost: 3000, add git tracking for local repo&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;git init  &lt;br/&gt;
git add .&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Generate controller for rails&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;rails generate controller home index&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The files generated are saved under
/app/views/home&lt;/p&gt;

&lt;p&gt;index.html.erb &lt;----&gt; /config/locales/routes.rb&lt;/p&gt;

&lt;p&gt;localhost: 3000/home/index   ←→   get ‘home/index’&lt;/p&gt;

&lt;p&gt;set home/index as root and create about page
routes.rb
Rails.application.routes.draw do&lt;/p&gt;

&lt;p&gt;  root &amp;lsquo;home#index&amp;rsquo;&lt;/p&gt;

&lt;p&gt;  get &amp;lsquo;/about&amp;rsquo; =&gt; &amp;lsquo;home#about&amp;rsquo;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;set home_controller.rb
def about
end&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;add about.html.erb file under home directory&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;Outline of Ruby Study&lt;/h4&gt;

&lt;p&gt;P1. Introduction and configuration of Ruby on Rails&lt;/p&gt;

&lt;p&gt;P2. Models and Migrations&lt;/p&gt;

&lt;p&gt;P3. Action Mailer and Active Job&lt;/p&gt;

&lt;p&gt;P4. Basics of the Asset PipelineP&lt;/p&gt;

&lt;p&gt;P5. Deployment&lt;/p&gt;
</description>
        <pubDate>Wed, 06 May 2015 00:00:00 -0400</pubDate>
        <link>/2015/05/06/ruby-on-rails-p1.html</link>
        <guid isPermaLink="true">/2015/05/06/ruby-on-rails-p1.html</guid>
        
        <category>RoR</category>
        
        <category>intro</category>
        
        <category>configuration</category>
        
        
      </item>
    
      <item>
        <title>Rdicount Markdown Syntax</title>
        <description>&lt;h4&gt;Escape&lt;/h4&gt;

&lt;p&gt;Escape: \&lt;/p&gt;

&lt;h4&gt;Headers&lt;/h4&gt;

&lt;p&gt;# This is an H1 #&lt;/p&gt;

&lt;p&gt;## This is an H2 ##&lt;/p&gt;

&lt;p&gt;### This is an H3 ###&lt;/p&gt;

&lt;h3&gt;Emphasis&lt;/h3&gt;

&lt;p&gt;Italic *&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Italic with star&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Bolded **&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; Bolded &lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;Block Quotes&lt;/h4&gt;

&lt;p&gt;&gt; block quote&lt;/p&gt;

&lt;h4&gt;List&lt;/h4&gt;

&lt;p&gt;  * Item 1
  * Item 2
  * Item 3&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2&lt;/li&gt;
&lt;li&gt;Item 3&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Code Style&lt;/h4&gt;

&lt;p&gt;`print &amp;ldquo;Hello World&amp;rdquo;`&lt;/p&gt;

&lt;p&gt;&lt;code&gt;print &quot;Hello World&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;use [tab]&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def functionA(a, b):
    return a + b
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;use {hightlight}+%  {endhighlight}+%&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;codeA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Links&lt;/h4&gt;

&lt;p&gt;[my link text](https://mzdu.github.io)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mzdu.github.io&quot;&gt;my link text&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link Only&lt;/p&gt;

&lt;p&gt;&amp;lt;http://mzdu.github.io&gt; &lt;a href=&quot;http://mzdu.github.io&quot;&gt;http://mzdu.github.io&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Images&lt;/h4&gt;

&lt;p&gt;![My image link text](https://avatars1.githubusercontent.com/u/1903316?v=3&amp;amp;s=460 =150x50)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1903316?v=3&amp;amp;s=460&quot; height=&quot;50&quot; width=&quot;150&quot; alt=&quot;My image link text&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;Centering&lt;/h4&gt;

&lt;p&gt;-&gt; this will be centered &amp;lt;-&lt;/p&gt;

&lt;p style=&quot;text-align:center;&quot;&gt; this will be centered&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;discount syntax &lt;a href=&quot;http://tedwise.com/markdown/&quot;&gt;http://tedwise.com/markdown/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 04 May 2015 00:00:00 -0400</pubDate>
        <link>/2015/05/04/rdiscount-syntax.html</link>
        <guid isPermaLink="true">/2015/05/04/rdiscount-syntax.html</guid>
        
        <category>rdiscount</category>
        
        <category>Jekyll</category>
        
        
      </item>
    
      <item>
        <title>MacOS Questions and Answers Collection</title>
        <description>&lt;ol&gt;
&lt;li&gt;Permissions: Why do I always have to type &amp;lsquo;sudo&amp;rsquo; before every command?&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Use sudo su or sudo -i to get an interactive root shell.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Launch Sublime Text 2 from the Mac OS X Terminal&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;https://gist.github.com/artero/1236170&lt;/p&gt;
</description>
        <pubDate>Sun, 03 May 2015 00:00:00 -0400</pubDate>
        <link>/2015/05/03/macos-questions-and-answers.html</link>
        <guid isPermaLink="true">/2015/05/03/macos-questions-and-answers.html</guid>
        
        <category>sublime</category>
        
        <category>terminal</category>
        
        
      </item>
    
      <item>
        <title>Google App Engine SDK Path</title>
        <description>&lt;p&gt;Where is the Google App Engine SDK path on OSX?&lt;/p&gt;

&lt;p&gt;Answer:&lt;/p&gt;

&lt;p&gt;/usr/local/google_appengine&lt;/p&gt;

&lt;p&gt;that&amp;rsquo;s a symlink that links to the SDK.&lt;/p&gt;
</description>
        <pubDate>Sat, 02 May 2015 00:00:00 -0400</pubDate>
        <link>/2015/05/02/google-app-engine-sdk-path.html</link>
        <guid isPermaLink="true">/2015/05/02/google-app-engine-sdk-path.html</guid>
        
        <category>google-app-engine</category>
        
        <category>sdk</category>
        
        <category>path</category>
        
        
      </item>
    
      <item>
        <title>Build a Site with Github and Jekyll</title>
        <description>&lt;ol&gt;
&lt;li&gt;Introduction
Intro
About Jekyll
Steps:
install jekyll locally
launch the server locally
after editing your stuff, upload it to the github&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;2.What We are building
Example, News from London
with Title, content, page&lt;/p&gt;

&lt;p&gt;click and check the detail of article, with news archive
with RSS feedsite&lt;/p&gt;

&lt;p&gt;3.Installing Jekyll
requirements:
1.ruby
2.ruby gems, is a packaging system for ruby.
3. Unix, Linux, OS&lt;/p&gt;

&lt;p&gt;install jekyll&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;sudo gem install jekyll
sudo gem install rdiscount     (for markdown package)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;4.How Jekyll Works
yaml configuration
_config.yml&lt;/p&gt;

&lt;p&gt;pretty much like angularJS or any other modern front-end templates&lt;/p&gt;

&lt;p&gt;5.Configuring the site
create a new project for jekyll&lt;/p&gt;

&lt;p&gt;create a new site&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;jekyll new myJsite            which creates a site template&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;start the local server&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;jekyll serve                       starts the template, which enables jekyll to translate the variables in static html page to the final static html page.
running on http://127.0.0.1:4000/&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;download the code from mijingo.com/code&lt;/p&gt;

&lt;p&gt;File Directory
&lt;em&gt;site
&lt;/em&gt;posts     where posts are&lt;/p&gt;

&lt;p&gt;_config.yml&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;layout: post
title: Henry&amp;rsquo;s Statement
date: September 20, 1880&lt;/p&gt;

&lt;p&gt;&amp;mdash; three dashes means the yaml content&lt;/p&gt;

&lt;p&gt;What is a YAML file?
Human-friendly data serialization standard
popular with Python and Ruby on Rails project
with
key: value format&lt;/p&gt;

&lt;p&gt;yaml.org  to check specificaitons&lt;/p&gt;

&lt;p&gt;// Site settings
title: &amp;ldquo;My Site&amp;rdquo;
email: daniel_pub@hotmail.com
description: &amp;ldquo;A memory storage.&amp;rdquo;
baseurl: &amp;ldquo;&amp;rdquo; # the subpath of your site, e.g. /blog/
url: &amp;ldquo;http://localhost:4000&amp;rdquo; # the base hostname &amp;amp; protocol for your site
github_username:  mzdu&lt;/p&gt;

&lt;p&gt;// Build settings
markdown: rdiscount
rdiscount:
    extensions: [smart]
permalink: /articles/:title&lt;/p&gt;

&lt;p&gt;6.Building the templates
_layouts&lt;/p&gt;

&lt;p&gt;copy default.html from resource&lt;/p&gt;

&lt;p&gt;learning liquid
like google app engine&lt;/p&gt;

&lt;p&gt;Building the Homepage&lt;/p&gt;

&lt;p&gt;7.Deploying to Github Pages
sftp
via git
beanstalk
and so on&lt;/p&gt;

&lt;p&gt;on Github&lt;/p&gt;

&lt;p&gt;In order to run the complete template&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;run jekyll serve &amp;ndash;baseurl ‘’&lt;/p&gt;&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 02 May 2015 00:00:00 -0400</pubDate>
        <link>/2015/05/02/build-a-site-with-github-and-jekyll.html</link>
        <guid isPermaLink="true">/2015/05/02/build-a-site-with-github-and-jekyll.html</guid>
        
        <category>github</category>
        
        <category>jekyll</category>
        
        
      </item>
    
      <item>
        <title>How to Start Jekyll Service</title>
        <description>&lt;blockquote&gt;&lt;p&gt;jekyll serve&lt;br/&gt;
or
If you will change your _config.yml file
jekyll serve &amp;ndash;watch&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/quickstart/&quot;&gt;Jekyll site&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 01 May 2015 00:00:00 -0400</pubDate>
        <link>/2015/05/01/how-to-start-jekyll-service.html</link>
        <guid isPermaLink="true">/2015/05/01/how-to-start-jekyll-service.html</guid>
        
        <category>jekyll</category>
        
        
      </item>
    
  </channel>
</rss>
